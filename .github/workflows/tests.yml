name: Tests

on:
  push:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '17'
          distribution: 'graalvm'
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Install Clojure tools
        uses: DeLaGuardo/setup-clojure@12.1
        with:
          cli: latest
      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git config --global init.defaultBranch "main"
      - name: Run non-Redis tests
        run: |
          # Run non-Redis tests first
          clojure -M:test-no-redis

      # Run Redis tests with proper cleanup between them
      - name: Run Redis tests
        run: |
          clojure -M:test-redis-only --namespace-regex "chrondb.api.redis.redis-test"
          # Kill any lingering Java processes that might be holding ports
          pkill -f "java.*chrondb" || true
          sleep 2

      - name: Run Redis integration test
        run: |
          clojure -M:test-redis-only --namespace-regex "chrondb.api.redis.redis-integration-test"
          pkill -f "java.*chrondb" || true
          sleep 2

      - name: Run Redis Jedis test
        run: |
          clojure -M:test-redis-only --namespace-regex "chrondb.api.redis.redis-jedis-test"
          pkill -f "java.*chrondb" || true
          sleep 2

      - name: Run Redis list test
        run: |
          clojure -M:test-redis-only --namespace-regex "chrondb.api.redis.redis-list-test"
          pkill -f "java.*chrondb" || true
          sleep 2

      - name: Run Redis benchmark test
        run: |
          clojure -M:test-redis-only --namespace-regex "chrondb.api.redis.redis-benchmark-test"
          pkill -f "java.*chrondb" || true

  coverage:
    runs-on: ubuntu-latest
    env:
      JAVA_OPTS: "-XX:+UseG1GC -Xmx3g -Xms1g"
    steps:
      - uses: actions/checkout@v4
      - name: Setup GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '17'
          distribution: 'graalvm'
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Install Clojure tools
        uses: DeLaGuardo/setup-clojure@12.1
        with:
          cli: latest
      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git config --global init.defaultBranch "main"
      - name: List test directory
        run: |
          ls -R test/
      - name: Run coverage
        run: |
          clojure -J-XX:+UseG1GC -J-Xmx3g -J-Xms1g -M:coverage --ns-regex "chrondb.*" --test-ns-regex "chrondb.*-test"
